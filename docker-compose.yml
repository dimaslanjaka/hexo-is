# To run tests for a specific Node.js version, use:
#   docker compose up node12
# To build without using the cache, run:
#   docker compose build --no-cache node12
# Then start the service:
#   docker compose up node12
# Replace 'node12' with the desired service (node12, node14, node16, node18, node20, node22)
#
# To run tests for all Node.js versions in parallel, use:
#   docker compose up

services:
  # Node.js 12 through 22 test runners
  node12:
    build:
      context: .
      target: node12
    working_dir: /workspace
    volumes:
      - ./tmp/docker-caches/node-12/node_modules:/workspace/node_modules
      - ./tmp/docker-caches/node-12/tmp:/workspace/tmp
  node14:
    build:
      context: .
      target: node14
    working_dir: /workspace
    volumes:
      - ./tmp/docker-caches/node-14/node_modules:/workspace/node_modules
      - ./tmp/docker-caches/node-14/tmp:/workspace/tmp
  node16:
    build:
      context: .
      target: node16
    working_dir: /workspace
    volumes:
      - ./tmp/docker-caches/node-16/node_modules:/workspace/node_modules
      - ./tmp/docker-caches/node-16/tmp:/workspace/tmp
  node18:
    build:
      context: .
      target: node18
    working_dir: /workspace
    volumes:
      - ./tmp/docker-caches/node-18/node_modules:/workspace/node_modules
      - ./tmp/docker-caches/node-18/tmp:/workspace/tmp
  node20:
    build:
      context: .
      target: node20
    working_dir: /workspace
    volumes:
      - ./tmp/docker-caches/node-20/node_modules:/workspace/node_modules
      - ./tmp/docker-caches/node-20/tmp:/workspace/tmp
  node22:
    build:
      context: .
      target: node22
    working_dir: /workspace
    volumes:
      - ./tmp/docker-caches/node-22/node_modules:/workspace/node_modules
      - ./tmp/docker-caches/node-22/tmp:/workspace/tmp
